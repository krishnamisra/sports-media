<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:basicauthnz="http://www.mulesoft.org/schema/mule/basicauthnz" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/basicauthnz http://www.mulesoft.org/schema/mule/basicauthnz/current/mule-basicauthnz.xsd" >
    <http:listener-config name="Notification-httpListenerConfig" host="${http.endpoint.host}" port="${http.endpoint.port}" doc:name="HTTP Listener Configuration" basePath="${http.endpoint.baseurl}"/>
    <apikit:config name="SportsMedia-config" raml="SportsMedia.raml" consoleEnabled="false" consolePath="console" doc:name="Router"/>
    <flow name="Main-sports-media">
        <http:listener config-ref="Notification-httpListenerConfig" path="/*" doc:name="HTTP - Receive Request">
            <http:response-builder reasonPhrase="#[flowVars.httpReason]"/>
        </http:listener>
        <set-variable variableName="logprefix" value="#[message.id + '(' + message.inboundProperties['http.method'] +')' + message.inboundProperties['http.request.uri']]" doc:name="Set Log Prefix - Used as Correlation ID" />
        <choice doc:name="Is Console In Use">
            <when expression="#[message.inboundProperties['http.request.uri'].contains('/console') || message.inboundProperties['http.request.uri'] == '/${http.endpoint.baseurl}/']">
                <logger level="DEBUG" doc:name="Log - Console In Use" message="#[flowVars.logprefix]: Console In Use"/>
            </when>
            <otherwise>
                <logger message="#[flowVars.logprefix]: Received Request" level="INFO" doc:name="Log - Received Request"/>
                <basicauthnz:basic-authn-authz config-ref="Basic_Authnz_Module" logprefix="#[flowVars.logprefix]" doc:name="Authenticate/Authorize"/>
            </otherwise>
        </choice>
        <apikit:router config-ref="SportsMedia-config" doc:name="APIkit Router"/>
        <exception-strategy ref="Notification-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="post:/user:SportsMedia-config" initialState="started">
        <flow-ref name="sf_post_create_user" doc:name="Create User"/>
    </flow>
    <flow name="patch:/user:SportsMedia-config" initialState="started">
        <flow-ref name="sf_patch_update_user" doc:name="Update User"/>
    </flow>
    <flow name="get:/user/{userId}:SportsMedia-config" initialState="started">
        <flow-ref name="sf_get_retrieve_user" doc:name="Retrieve User"/>
    </flow>
    <flow name="delete:/user:SportsMedia-config" initialState="started">
        <flow-ref name="sf_delete_deactivate_user" doc:name="Deactivate User"/>
    </flow>
    <flow name="get:/sns:SportsMedia-config" initialState="started">
        <flow-ref name="sf_delete_deactivate_user" doc:name="Deactivate User"/>
    </flow>
    <flow name="get:/sns/twitter:SportsMedia-config" initialState="started">
        <flow-ref name="sf_delete_deactivate_user" doc:name="Deactivate User"/>
    </flow>
    <flow name="get:/sns/twitter/{twitterHandle}:SportsMedia-config" initialState="started">
        <flow-ref name="sf_delete_deactivate_user" doc:name="Deactivate User"/>
    </flow>
    <flow name="get:/matches:SportsMedia-config" initialState="started">
        <flow-ref name="sf_delete_deactivate_user" doc:name="Deactivate User"/>
    </flow>
    <flow name="get:/matches/{matchId}:SportsMedia-config" initialState="started">
        <flow-ref name="sf_delete_deactivate_user" doc:name="Deactivate User"/>
    </flow>
    <flow name="get:/matches/{matchId}/score:SportsMedia-config" initialState="started">
        <flow-ref name="sf_delete_deactivate_user" doc:name="Deactivate User"/>
    </flow>
    <flow name="get:/matches/{matchId}/pbp:SportsMedia-config" initialState="started">
        <flow-ref name="sf_delete_deactivate_user" doc:name="Deactivate User"/>
    </flow>
    <apikit:mapping-exception-strategy name="Notification-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="401">
            <apikit:exception value="org.mule.api.security.UnauthorisedException" />
            <expression-component doc:name="Set Error Variables"><![CDATA[flowVars.errorMessage = 'Unauthorized';
flowVars.errorAdditionalDetails= exception.getCauseException().getMessage();
flowVars.httpReason='Unauthorized';
]]></expression-component>
            <flow-ref name="sf_common-modules_processError" doc:name="Send Error Response" />
        </apikit:mapping>

        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <expression-component doc:name="Set Error Variables"><![CDATA[flowVars.errorMessage = 'Resource Not Found';
flowVars.errorAdditionalDetails= '';
flowVars.httpReason='Not Found';
]]></expression-component>
            <flow-ref name="sf_common-modules_processError" doc:name="Send Error Response" />
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <expression-component doc:name="Set Error Variables"><![CDATA[flowVars.errorMessage = 'Method Not Allowed';
flowVars.errorAdditionalDetails= '';
flowVars.httpReason='Method Not Allowed';
]]></expression-component>
            <flow-ref name="sf_common-modules_processError" doc:name="Send Error Response" />
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <expression-component doc:name="Set Error Variables"><![CDATA[flowVars.errorMessage = 'Unsupported Media Type';
flowVars.errorAdditionalDetails= '';
flowVars.httpReason='Unsupported Media Type';
]]></expression-component>
            <flow-ref name="sf_common-modules_processError" doc:name="Send Error Response" />
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <expression-component doc:name="Set Error Variables"><![CDATA[flowVars.errorMessage = 'Not Acceptable';
flowVars.errorAdditionalDetails= '';
flowVars.httpReason='Not Acceptable';
]]></expression-component>
            <flow-ref name="sf_common-modules_processError" doc:name="Send Error Response" />
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <expression-component doc:name="Set Error Variables"><![CDATA[flowVars.errorMessage = 'Bad request';
flowVars.errorAdditionalDetails= exception.getCauseException().getMessage();
flowVars.httpReason='Bad Request';
]]></expression-component>
            <flow-ref name="sf_common-modules_processError" doc:name="Send Error Response" />
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
